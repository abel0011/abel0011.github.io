I"<C<p>Bash interfaz de usuario de linea de comandos, especificamente una shell de unix,
asi como un lenguaje de scripting, es el caparazón del proyexto GNU</p>

<p>El contenido presentado es una recopilación de <a href="https://www.youtube.com/watch?v=RUorAzaDftg">https://www.youtube.com/watch?v=RUorAzaDftg</a></p>

<hr />

<h1 id="movilidad-en-gnulinux"><strong>Movilidad en gnu/linux</strong></h1>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ mkdir bash =&gt; creando directorio "bash"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cd !$ =&gt; ingresando al directorio recién creado "bash"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ touch - =&gt; crear fichero "-"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ echo "cadena de caracteres" &gt; - =&gt; ingresando cadena de caracteres al fichero "-"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat ./- =&gt; mostrar contenido del fichero que esta en "-"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ pwd =&gt; print working directory, imprimir directorio de trabajo
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat /home/user/carpeta/bash/- =&gt; mostrando el archivo desde su ruta absoluta
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ $(pwd) =&gt; recepciona el output de pwd
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat $(pwd)/- =&gt; mostrar el contenido de "-"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat $(pwd)/* =&gt; mostrar el contenido de todos los ficheros que se encuentren en esa ruta
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ time $(pwd) =&gt; muestra el tiempo de ejecución de un comando
</code></pre></div></div>

<p><br /></p>
<hr />

<h1 id="sesión-dos"><strong>Sesión Dos</strong></h1>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ mkdir "espacio en blanco" =&gt; creando un directo con espacios en blanco
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cd "espacio en blanco" =&gt; change directory, cambiamos de directorio
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cd espacio\ en\ blanco  =&gt; cambiando de directorio
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ touch "fichero con espacios" =&gt; creando fichero
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ echo $(cat /etc/hosts) &gt; fichero\ con\ espacios =&gt; redirigiendo la salida del comando al fichero con espacios
</code></pre></div></div>

<p><br /></p>
<hr />

<p><strong>Expreciones Regulares</strong>: secuencia de caracteres y metacaracteres que forma un patrón de búsqueda, para la búsqueda de patrones de cadenas de caracteres u operaciones de sustituciones.</p>

<p>Fuente <a href="https://francisconi.org/linux/expresiones-regulares">https://francisconi.org/linux/expresiones-regulares</a></p>
<hr />

<p><br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat "fichero con espacios" =&gt; mostrar el contenido del fichero
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat fichero\ con\ espacios =&gt; mostrar el contenido del fichero
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat fi* =&gt; mostrar el contenido del fichero que comienze con "fi" y posteriormente cualquier cosa "*"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat *os =&gt; mostrar el contenido del fichero que comienze con cualquier cosa "*" y termine en "os"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat /home/user/carpeta/bash/"espacio en blanco"/* =&gt; mostrar el contenido de todos los ficheros de la ruta actual
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat "$(pwd)"/* =&gt;mostrar todo el contenido de todos los ficheros de la ruta actual
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat * =&gt; mostar todo lo que se encuntre en este directorio o ruta
</code></pre></div></div>

<p><br /></p>
<hr />

<h1 id="sesión-tres"><strong>Sesión Tres</strong></h1>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ ls -a =&gt; listar ficheros ocultos 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find . =&gt; mustrame todo el contenido partiendo de la ruta actual
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find -type f =&gt; encuentrame solo los ficheros
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find -type f -printf "%f\t%u\t%g\t%m\n" | column -t 
   =&gt; -printf : me imprima
   =&gt; %f : ficheros
   =&gt; t%p : de forma tabula me indiques la ruta absoluta
   =&gt; t%u : de forma tabulada  me indiques el usuario propietario
   =&gt; t%g : de forma tabulada me indiques el  grupo asignado
   =&gt; t%m : de forma tabulada me indiques el modo (permiso asignado a niver numerico )
   =&gt; \n : salto de linea, para formatear el output 
   =&gt; -t : formatea el output en una tabla
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ touch .hidden =&gt; crear un fichero oculto
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ echo "este fichero no es visible" &gt; .hidden =&gt; agregando cadena de caracteres al fichero
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cd / =&gt; cambiando de directorio a la ruta raiz
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find . -name .hidden 2&gt;/dev/null =&gt; encuentrame el fichero ".hidden" partiendo del directorio actual
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xargs: ejecuta un comando de forma paralela, con el output del comando ejecutado anteriormente
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find . -name .hidden | xargs cat =&gt; encuntrame el fichero ".hidden" y asu vez muestrame su contenido
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find . -type f | xargs grep "este fichero" 2&gt;/dev/null =&gt; encuentra el fichero con el contenido "este fichero"
</code></pre></div></div>

<p><br /></p>
<hr />

<h1 id="sesión-cuatro"><strong>Sesión Cuatro</strong></h1>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>permisos en linux
.rwxrwxrwx .hidden 
r - 4 =&gt; read
w - 2 =&gt; write
x - 1 =&gt; execute
(rwx)  (--x) (--x)
 111    001   001 
 2^0=1  2^0   2^0
 2^1=2
 2^2=4
   6     1      1
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ sudo useradd pepito =&gt; creando usuario pepito (por defecto se crea un grupo con su mismo nombre)
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ mkdir directorio_pepito =&gt; creando directorio
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ chgrp pepito directorio_pepito =&gt; change group, asignando el grupo pepito a la carpeta "directorio_pepito"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ chown pepito directorio_pepito =&gt; asignando a pepito como usuario propietario de la carpeta
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ chown pepito:pepito directorio_pepito =&gt; asignando usuario y grupo a la carpeta "directorio_pepito"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ chattr +i -V .hidden =&gt; asignando privilegio especial para no eliminar el archivo (ni siquiera root)
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ lsattr =&gt; ver los privilegios especiales
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ touch fichero2 &amp;&amp; cd / =&gt; creando el "fichero2" y a su vez dirigiendome a la ruta raiz
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find . -name "fich*" =&gt; encuntrame al fichero que comience con "fich" y cualquier cosa "*"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ which file =&gt; mostrar la ruta absoluta del binario "file" dentro del PATH
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ echo $PATH =&gt; mostrar la ruta del PATH
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ sudo apt install mlocate =&gt; instalando herramienta en ubuntu
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ sudo updatedb =&gt; creando la base de datos de los ficheros del sistema
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ locate fichero =&gt; realizando busqueda de "fichero"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ touch script.sh &amp;&amp; chmod +x script.sh &amp;&amp; nano script.sh =&gt; creando archivo "script", asignando permiso de ejecución y editando el archivo
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"te encuentras en esta ruta [ </span><span class="si">$(</span><span class="nb">pwd</span><span class="si">)</span><span class="s2"> ]"</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ file script.sh=&gt; determina el tipo y formato de un archivo (para realizar esto, hace uso de los "magic numbers")
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ touch fichero.txt &amp;&amp; nano fichero.txt =&gt; creando "fichero.txt" y editando fichero
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GIF8; =&gt; ingresa esto en el "fichero.txt"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ file fichero.txt =&gt; nos mostrar un fichero GIF, esto se debe a los "magic numbers" (47 49 46 38 3B ...	)
</code></pre></div></div>

<hr />

<p><strong>Scrub</strong>: escribe patrones de forma iterativa en archivos o dispositivos de disco para dificultar la recuperación de los datos</p>

<p><strong>Shred</strong>: herramienta de eliminación de archivos de modo seguro</p>

<p>Fuente: <a href="https://www.computertechblog.com/using-scrub-command-to-secure-erase-data-in-redhat-linux/">https://www.computertechblog.com/using-scrub-command-to-secure-erase-data-in-redhat-linux/</a>
				<a href="https://www.welivesecurity.com/la-es/2014/11/24/como-hacer-borrado-seguro-shred-linux/">https://www.welivesecurity.com/la-es/2014/11/24/como-hacer-borrado-seguro-shred-linux/</a></p>
<hr />

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function </span>rmk<span class="o">(){</span>
  scrub <span class="nt">-p</span> dod <span class="nv">$1</span>
  <span class="nb">shred</span> <span class="nt">-zun</span> 10 <span class="nt">-v</span> <span class="nv">$1</span>
<span class="o">}</span>
<span class="c"># ingresar el el ~/.bashrc o ~/.zshrc</span>
<span class="c"># z: zero, sobreescribe 0 para evitar dejar rastro</span>
<span class="c"># u: trunca y elimina el archivo después de sobrescribirlo</span>
<span class="c"># n: número de veces a sobrescribir el archivo o partición </span>
<span class="c">#(3 veces por defecto). Cuanto mayor sea este número, más difícil será su recuperación</span>
<span class="c"># v: verbose o verborragico, muestra el progreso en pantalla</span>

</code></pre></div></div>
<p><br /></p>
<hr />

<h1 id="sesión-cinco"><strong>Sesión Cinco</strong></h1>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ file directorio/* =&gt; mostrar que tipo y formato de archivos hay en "directorio"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$  mkdir example &amp;&amp; cd example &amp;&amp; touch fichero.jpg fichero.png fichero.txt fichero2.txt &amp;&amp; echo "texto" &gt; fichero2.txt &amp;&amp; cd ..
=&gt;creando directorio, con ficheros
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ find . -name "ficher*" | xargs file 
=&gt; encontrar desde la ruta actual todos los ficheros que coincidan con "ficher",
y cualquier cosa "*". A su vez me muestre el formato y tipo de archivo
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ time find . -name "ficher*" | xargs file 
=&gt; time: nos muestra el tiempo de computo del comando
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ time find example/* =&gt; disminuye el tiempo de computo de computo 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$  find . -name fichero2.txt | xargs cat
=&gt; realizando una busqueda de "fichero2.txt" y mostrando su contenido
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~$ cat $(find . -name fichero2.txt) 
=&gt;mostrando el contenido del output del comando entre "$()"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ctrl + r =&gt; realizando búsqueda de comandos previamente ejecutados
</code></pre></div></div>
<p><br /></p>
<hr />

<p>-writable =&gt; ficheros en los se puede escribir</p>

<p>-executable =&gt; ficheros que se pueden ejecutar</p>

<p>-readable =&gt; ficheros que se pueden leer</p>
<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~ $
</code></pre></div></div>
:ET